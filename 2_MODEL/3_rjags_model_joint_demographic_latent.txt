model_simple <- "



data{

#############################################################################################
####      Set prior parameters & observation data to standardized latent covariates     ####
#############################################################################################

Q[1] <- 0.39 # acoustic correction for anchovy
Q[2] <- 0.43 # acoustic correction for sardine

for (e in 1:2) # anchovy (e=1) and sardine (e=2)
{
  min.N1.prior[e] <- (mean(n1.obs[1:5,e])/2)*Q[e] # set parameters for the prior on 1st year abundance 
  max.N1.prior[e] <- (2*mean(n1.obs[1:5,e]))*Q[e] 

  min.N2.prior[e] <- (mean(n2.obs[1:5,e])/2)*Q[e] 
  max.N2.prior[e] <- (2*mean(n2.obs[1:5,e]))*Q[e] 

  min.N3.prior[e] <- (mean(n3.obs[1:5,e])/2)*Q[e]
  max.N3.prior[e] <- (2*mean(n3.obs[1:5,e]))*Q[e] 

  min.N4.prior[e] <- (mean(n4.obs[1:5,e])/2)*Q[e] 
  max.N4.prior[e] <- (2*mean(n4.obs[1:5,e]))*Q[e] 

  L1.prior[e] <- mean(l1.obs[c(19:20,22:23),e]) # set parameters for the prior on 1st year body size
  L2.prior[e] <- mean(l2.obs[1:5,e])
  L3.prior[e] <- mean(l3.obs[1:5,e])
  L4.prior[e] <- mean(l4.obs[1:5,e])

  L1.prior.annuel[e] <- mean(l1.obs[c(1:20,22:23),e])


# To standardized latent demographic effects

  # Abundances
  
  n1.obs.moy[e]<-mean(n1.obs[c(1:20,22:23),e])
  n1.obs.sd[e]<-sd(n1.obs[c(1:20,22:23),e])

  n2.obs.moy[e]<-mean(n2.obs[c(1:20,22:23),e])
  n2.obs.sd[e]<-sd(n2.obs[c(1:20,22:23),e])

  nlarge.obs.moy[e]<-mean(nlarge.obs[c(1:20,22:23),e])
  nlarge.obs.sd[e]<-sd(nlarge.obs[c(1:20,22:23),e])


  # Body sizes

  l1.obs.moy[e]<-mean(l1.obs[c(1:20,22:23),e])
  l1.obs.sd[e]<-sd(l1.obs[c(1:20,22:23),e])

  # Recruitment

  n.ssn.obs.moy[e] <- mean(n.ssn.obs[c(1:20,22:23),e])
  n.ssn.obs.sd[e]<-sd(n.ssn.obs[c(1:20,22:23),e])
}

for (e in 2) # sardine
{
  min.N5.prior[e] <- (mean(n5.obs[1:5,e])/2)*Q[e]
  max.N5.prior[e] <- (2*mean(n5.obs[1:5,e]))*Q[e] 

  min.N6.prior[e] <- (mean(n6.obs[1:5,e])/2)*Q[e]
  max.N6.prior[e] <- (2*mean(n6.obs[1:5,e]))*Q[e] 

  min.N7.prior[e] <- (mean(n7.obs[1:5,e])/2)*Q[e]
  max.N7.prior[e] <- (2*mean(n7.obs[1:5,e]))*Q[e] 

  L5.prior[e] <- mean(l5.obs[1:5,e])
  L6.prior[e] <- mean(l6.obs[1:5,e])
  L7.prior[e] <- mean(l7.obs[1:5,e])

  l5.obs.moy[e]<-mean(l5.obs[c(1:20,22:23),e]) 
  l5.obs.sd[e]<-sd(l5.obs[c(1:20,22:23),e])

}

}  # end data 





model {

##########################
####      Prior       ####
##########################

# Abundance 
###########

for (e in 1:2)
{
  N1[1,e] ~ dunif(min.N1.prior[e],max.N1.prior[e]) # Estimated abundance of year class 1 in the first year 
  N2[1,e] ~ dunif(min.N2.prior[e],max.N2.prior[e]) 
  N3[1,e] ~ dunif(min.N3.prior[e],max.N3.prior[e]) 
  N4[1,e] ~ dunif(min.N4.prior[e],max.N4.prior[e]) 
} # end loop on e

for (e in 2)
{
  N5[1,e] ~ dunif(min.N5.prior[e],max.N5.prior[e]) 
  N6[1,e] ~ dunif(min.N6.prior[e],max.N6.prior[e]) 
  N7[1,e] ~ dunif(min.N7.prior[e],max.N7.prior[e]) 
} # end loop on e

##### Demographic transition rate between the spawning (Z.SSN = R) stock and age class 1 (N1)

mu_Z.SSN[1] <- 1.223
mu_Z.SSN[2] <- 0.796  # data_SP$N1[i+1]/N.SSN[i] with N.SSN<-data_SP$N1*maturite$age1+...

for (e in 1:2)
{
log_mu_Z.SSN[e] ~ dnorm(log(mu_Z.SSN[e]),0.1) # Interannual average of recruitment for the SS age group
sigma.Z.SSN[e] ~ dunif(0,5) # Interannual variability of recruitment for the SS age group
} # end loop on e

# Body size   
#####################

  sigma.L <- 1 # Variability in the value of first-year body size

for (e in 1:2)
{
  L1[n_annee,e] ~ dlnorm(log(L1.prior[e]),1/(sigma.L*sigma.L))
  L2[1,e] ~ dlnorm(log(L2.prior[e]),1/(sigma.L*sigma.L)) 
  L3[1,e] ~ dlnorm(log(L3.prior[e]),1/(sigma.L*sigma.L))
  L4[1,e] ~ dlnorm(log(L4.prior[e]),1/(sigma.L*sigma.L))
} # end loop on e

for (e in 2)
{
  L5[1,e] ~ dlnorm(log(L5.prior[e]),1/(sigma.L*sigma.L))
  L6[1,e] ~ dlnorm(log(L6.prior[e]),1/(sigma.L*sigma.L))
  L7[1,e] ~ dlnorm(log(L7.prior[e]),1/(sigma.L*sigma.L))
} # end loop on e


# Parameters of Natural mortality distributions 
######################

  mu_M1[1] <- 0.733 # Average natural mortality rate for age group 1 from 1987 to 2012 (Uriarte et al., 2016)
  mu_M2[1] <- 1.326 # Average natural mortality rate for age group 2, 3, 4 from 1987 to 2012 (Uriarte et al., 2016)
  mu_M3[1] <- 1.326 # Average natural mortality rate for age group 2, 3, 4 from 1987 to 2012 (Uriarte et al., 2016)

  mu_M1[2] <- 0.692 # Average natural mortality rate for age class 1 but for stock zone27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_M2[2] <- 0.546 # Average natural mortality rate for age class 2 but for stock zone27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_M3[2] <- 0.475 # Average natural mortality rate for age class 3 but for stock zone27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_M4[2] <- 0.435 # Average natural mortality rate for age class 4 but for stock zone27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_M5[2] <- 0.412 # Average natural mortality rate for age class 5 but for stock zone27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_M6[2] <- 0.400 # Average natural mortality rate for age class 6 but for stock zone27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  
for (e in 1:2)
{
  log_mu_M1[e] ~ dnorm(log(mu_M1[e]),0.1) # Interannual average natural mortality for age class 1
  log_mu_M2[e] ~ dnorm(log(mu_M2[e]),0.1)  
  log_mu_M3[e] ~ dnorm(log(mu_M3[e]),0.1) 

  sigma.M1[e] ~ dunif(0,10) # Interannual variability in natural mortality of age class 1
  sigma.M2[e] ~ dunif(0,10) 
  sigma.M3[e] ~ dunif(0,10) 

} # end loop on e

for (e in 2)
{
  log_mu_M4[e] ~ dnorm(log(mu_M4[e]),0.1) 
  log_mu_M5[e] ~ dnorm(log(mu_M5[e]),0.1) 
  log_mu_M6[e] ~ dnorm(log(mu_M5[e]),0.1) 

  sigma.M4[e] ~ dunif(0,10) 
  sigma.M5[e] ~ dunif(0,10) 
  sigma.M6[e] ~ dunif(0,10) 
  
} # end loop on e


# Parameters of Fishing mortality distributions 
######################

  mu_F1[1] <- 0.36 # Fishing mortality rate for age group 1 in 2000 (ICES WGMHSA Report 2006)
  mu_F2[1] <- 0.47 # Fishing mortality rate for age group 2 in 2000 (ICES WGMHSA Report 2006)
  mu_F3[1] <- 0.47 # Fishing mortality rate for age group 3 in 2000(ICES WGMHSA Report 2006)

  mu_F1[2] <- 0.12 # Fishing mortality rate for year-class 1 in 2000 but for stock in zones 27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_F2[2] <- 0.20 # Fishing mortality rate for year-class 2 in 2000 but for stock in zones 27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_F3[2] <- 0.297 # Fishing mortality rate for year-classes 3 to 6 in 2000 but for stock in zones 27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_F4[2] <- 0.297 # Fishing mortality rate for year-classes 3 to 6 in 2000 but for stock in zones 27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_F5[2] <- 0.297 # Fishing mortality rate for year-classes 3 to 6 in 2000 but for stock in zones 27 subarea 8c and 9a (ICES WGMHSA Report 2021)
  mu_F6[2] <- 0.297 # Fishing mortality rate for year-classes 3 to 6 in 2000 but for stock in zones 27 subarea 8c and 9a (ICES WGMHSA Report 2021)
 
for (e in 1:2)
{
  log_mu_F1[e] ~ dnorm(log(mu_F1[e]),0.1) # Interannual average fishing mortality for age class 1
  log_mu_F2[e] ~ dnorm(log(mu_F2[e]),0.1) 
  log_mu_F3[e] ~ dnorm(log(mu_F3[e]),0.1) 

  sigma.F1[e] ~ dunif(0,10) # Interannual variability in fishing mortality of year class 1
  sigma.F2[e] ~ dunif(0,10) 
  sigma.F3[e] ~ dunif(0,10) 

} # end loop on e

for (e in 2)
{
  log_mu_F4[e] ~ dnorm(log(mu_F4[e]),0.1) 
  log_mu_F5[e] ~ dnorm(log(mu_F5[e]),0.1) 
  log_mu_F6[e] ~ dnorm(log(mu_F6[e]),0.1) 

  sigma.F4[e] ~ dunif(0,10)
  sigma.F5[e] ~ dunif(0,10) 
  sigma.F6[e] ~ dunif(0,10) 

} # end loop on e

# Parameters of growth rate distributions 
####################
  
  mu_g1[1] <- 1.1946 # Average growth rate recovered from the data (average of (L2/L1) over the period 2000-2022)
  mu_g2[1] <- 1.0547 # Average growth rate recovered from the data (average of (L3/L2) over the period 2000-2022)
  mu_g3[1] <- 1.0597 # Average growth rate recovered from the data (average of (L4/L3) over the period 2000-2022)

  mu_g1[2] <- 1.2097 # Average growth rate recovered from the data (average of (L2/L1) over the period 2000-2022)
  mu_g2[2] <- 1.0709 # Average growth rate recovered from the data (average of (L3/L2) over the period 2000-2022)
  mu_g3[2] <- 1.0398 # Average growth rate recovered from the data (average of (L4/L3) over the period 2000-2022)
  mu_g4[2] <- 1.0349 # Average growth rate recovered from the data (average of (L5/L4) over the period 2000-2022)
  mu_g5[2] <- 1.0288 # Average growth rate recovered from the data (average of (L6/L5) over the period 2000-2022)
  mu_g6[2] <- 1.0181 # Average growth rate recovered from the data (average of (L7/L6) over the period 2000-2022)


for (e in 1:2)
{
  log_mu_g1[e] ~ dnorm(log(mu_g1[e]),0.1) # Interannual average growth for age class 1
  log_mu_g2[e] ~ dnorm(log(mu_g2[e]),0.1) 
  log_mu_g3[e] ~ dnorm(log(mu_g3[e]),0.1) 

  sigma.g1[e] ~ dunif(0,10) # prior of interannual variability in growth at age 1
  sigma.g2[e] ~ dunif(0,10) 
  sigma.g3[e] ~ dunif(0,10) 

} # end loop on e

for (e in 2)
{
  log_mu_g4[e] ~ dnorm(log(mu_g4[e]),0.1) # Interannual average pseudo-growth for age class 4
  log_mu_g5[e] ~ dnorm(log(mu_g5[e]),0.1) 
  log_mu_g6[e] ~ dnorm(log(mu_g6[e]),0.1) 

  sigma.g4[e] ~ dunif(0,10) # prior of interannual variability in pseudo-growth for age class 4
  sigma.g5[e] ~ dunif(0,10) 
  sigma.g6[e] ~ dunif(0,10)
  
} # end loop on e



# Regression parameters (M covariates only)
####################

# Density dependency coefficients
for (e in 1:2)
{
### effects on M1
  alpha_M1[e] ~ dunif(-5,5) # Coefficient for the regression E_log_M1 ~ 
  beta_M1[e] ~ dunif(-5,5) # Coefficient for the regression E_log_M1 ~ 

### effects on M2
  alpha_M2[e] ~ dunif(-5,5) # Coefficient for the regression E_log_M2 ~ 
  alpha.bis_M2[e] ~ dunif(-5,5) # Coefficient for the regression E_log_M1 ~ 

### effects on M3
  alpha_M3[e] ~ dunif(-5,5) # Coefficient for the regression E_log_M3 ~  
  alpha.bis_M3[e] ~ dunif(-5,5) # Coefficient for the regression E_log_M3 ~  
  alpha.ter_M3[e] ~ dunif(-5,5) # Coefficient for the regression E_log_M3 ~  

### effects on Z.SSN (recruitment)
  alpha_Z.SSN[e] ~ dunif(-5,5) # Coefficient for the regression E_log_Z.SSN ~ 


} # end loop on e




# Estimation of parameters: Mortalities and Pseudo-growth (addition of covariate effects) 
####################


for (t in 1:(n_annee-1)){

      ### Natural mortality ###  

	E_log_M1[t,1]=log_mu_M1[1]+beta_M1[1]*((L1[t,1]-l1.obs.moy[1])/l1.obs.sd[1])						
	E_log_M1[t,2]=log_mu_M1[2]+alpha_M1[2]*((N1[t,2]-n1.obs.moy[2])/n1.obs.sd[2])
	
	E_log_M2[t,1]=log_mu_M2[1]+alpha_M2[1]*((N2[t,1]-n2.obs.moy[1])/n2.obs.sd[1])+alpha.bis_M2[1]*((N1[t,1]-n1.obs.moy[1])/n1.obs.sd[1])								
	E_log_M2[t,2]=log_mu_M2[2]
	
	E_log_M3[t,1]=log_mu_M3[1]
	E_log_M3[t,2]=log_mu_M3[2]+alpha_M3[2]*((N1[t,2]-n1.obs.moy[2])/n1.obs.sd[2])+alpha.bis_M3[2]*((N2[t,2]-n2.obs.moy[2])/n2.obs.sd[2])+alpha.ter_M3[2]*(((N3[t,2]+N4[t,2]+N5[t,2]+N6[t,2]+N7[t,2])-nlarge.obs.moy[2])/nlarge.obs.sd[2])
  				
      ### Pseudo-growth ### 

	E_log_g1[t,1]=log_mu_g1[1]
	E_log_g1[t,2]=log_mu_g1[2]

	E_log_g2[t,1]=log_mu_g2[1]
	E_log_g2[t,2]=log_mu_g2[2]

	E_log_g3[t,1]=log_mu_g3[1]
	E_log_g3[t,2]=log_mu_g3[2]

      ### Demographic transition parameter ###

  	E_log_Z.SSN[t,1]=log_mu_Z.SSN[1]+alpha_Z.SSN[1]*((N.SSN[t,1]-n.ssn.obs.moy[1])/n.ssn.obs.sd[1])
	E_log_Z.SSN[t,2]=log_mu_Z.SSN[2]

}




##################################################################################################################################################
for (e in 1:2)
{
  for (t in 1:(n_annee-1)){

      ### Natural mortality ### 

      M1[t,e] ~ dlnorm(E_log_M1[t,e],1/(sigma.M1[e]*sigma.M1[e])) # Prior for natural mortality for age group 1 in year t
      M2[t,e] ~ dlnorm(E_log_M2[t,e],1/(sigma.M2[e]*sigma.M2[e])) 
      M3[t,e] ~ dlnorm(E_log_M3[t,e],1/(sigma.M3[e]*sigma.M3[e])) 

      ### Fishing mortality ###

      F1[t,e] ~ dlnorm(log_mu_F1[e],1/(sigma.F1[e]*sigma.F1[e])) 
      F2[t,e] ~ dlnorm(log_mu_F2[e],1/(sigma.F2[e]*sigma.F2[e])) 
      F3[t,e] ~ dlnorm(log_mu_F3[e],1/(sigma.F3[e]*sigma.F3[e]))
      
      Z.SSN[t,e] ~ dlnorm(E_log_Z.SSN[t,e],1/(sigma.Z.SSN[e]*sigma.Z.SSN[e])) 

      ### Pseudo-growth ###

      g1[t,e] ~ dlnorm(log_mu_g1[e],1/(sigma.g1[e]*sigma.g1[e])) 
      g2[t,e] ~ dlnorm(log_mu_g2[e],1/(sigma.g2[e]*sigma.g2[e])) 
      g3[t,e] ~ dlnorm(log_mu_g3[e],1/(sigma.g3[e]*sigma.g3[e])) 

 } # end loop on t (priors on parameters)

} # end loop on e

for (e in 2)
{
  for (t in 1:(n_annee-1)){

      ### Natural mortality ### 

	E_log_M4[t,e]=log_mu_M4[e]
	E_log_M5[t,e]=log_mu_M5[e]
  E_log_M6[t,e]=log_mu_M6[e]

      M4[t,e] ~ dlnorm(E_log_M4[t,e],1/(sigma.M4[e]*sigma.M4[e])) # Prior de la mortalité naturelle de la classe d'âge 4 de l'année t
      M5[t,e] ~ dlnorm(E_log_M5[t,e],1/(sigma.M5[e]*sigma.M5[e])) # Prior de la mortalité naturelle de la classe d'âge 5 de l'année t
      M6[t,e] ~ dlnorm(E_log_M6[t,e],1/(sigma.M6[e]*sigma.M6[e])) # Prior de la mortalité naturelle de la classe d'âge 6 de l'année t

      ### Fishing mortality ###
      
      F4[t,e] ~ dlnorm(log_mu_F4[e],1/(sigma.F4[e]*sigma.F4[e])) # Prior de la mortalité par pêche de la classe d'âge 4 de l'année t
      F5[t,e] ~ dlnorm(log_mu_F5[e],1/(sigma.F5[e]*sigma.F5[e])) # Prior de la mortalité par pêche de la classe d'âge 5 de l'année t
      F6[t,e] ~ dlnorm(log_mu_F6[e],1/(sigma.F6[e]*sigma.F6[e])) # Prior de la mortalité par pêche de la classe d'âge 5 de l'année t

      ### Pseudo-growth ###

	E_log_g4[t,e]=log_mu_g4[e]
	E_log_g5[t,e]=log_mu_g5[e]
  	E_log_g6[t,e]=log_mu_g6[e]

      g4[t,e] ~ dlnorm(E_log_g4[t,e],1/(sigma.g4[e]*sigma.g4[e])) # Prior de la croissance à l'age 4 de l'année t
      g5[t,e] ~ dlnorm(E_log_g5[t,e],1/(sigma.g5[e]*sigma.g5[e])) # Prior de la croissance à l'age 5 de l'année t
      g6[t,e] ~ dlnorm(E_log_g6[t,e],1/(sigma.g6[e]*sigma.g6[e])) # Prior de la croissance à l'age 6 de l'année t


 } # end loop on t (priors on parameters)

} # end loop on e




##################################################################################################################################################



#############################
###   Process equations   ###
#############################


################################
# Building the life-cycle 

for (e in 1)
{
for(t in 1:(n_annee)){

N.SSN[t,e]<-mat[t,4,e]*N4[t,e] + mat[t,3,e]*N3[t,e] + mat[t,2,e]*N2[t,e] + mat[t,1,e]*N1[t,e] 	# spawning stowk abundance
L.SSN[t,e]<-mean((mat[t,4,e]*N4[t,e]/N.SSN[t,e])*L4[t,e] + (mat[t,3,e]*N3[t,e]/N.SSN[t,e])*L3[t,e] + (mat[t,2,e]*N2[t,e]/N.SSN[t,e])*L2[t,e] + (mat[t,1,e]*N1[t,e]/N.SSN[t,e])*L1[t,e]) 

}
} # end loop on e

for (e in 2)
{
for(t in 1:(n_annee)){

N.SSN[t,e]<- mat[t,7,e]*N7[t,e] + mat[t,6,e]*N6[t,e] + mat[t,5,e]*N5[t,e] + mat[t,4,e]*N4[t,e] + mat[t,3,e]*N3[t,e] + mat[t,2,e]*N2[t,e] + mat[t,1,e]*N1[t,e] 	# spawning stowk abundance
L.SSN[t,e]<-mean((mat[t,7,e]*N7[t,e]/N.SSN[t,e])*L7[t,e]+(mat[t,6,e]*N6[t,e]/N.SSN[t,e])*L6[t,e] + (mat[t,5,e]*N5[t,e]/N.SSN[t,e])*L5[t,e] + (mat[t,4,e]*N4[t,e]/N.SSN[t,e])*L4[t,e] + (mat[t,3,e]*N3[t,e]/N.SSN[t,e])*L3[t,e] + (mat[t,2,e]*N2[t,e]/N.SSN[t,e])*L2[t,e] + (mat[t,1,e]*N1[t,e]/N.SSN[t,e])*L1[t,e]) 

}
} # end loop on e



for (e in 1:2)
{
  for(t in 1:(n_annee-1)){
# Absolute catches (Baranov equation) 
#######################################

      C1[t,e] <- (F1[t,e]/(M1[t,e]+F1[t,e])) * (1-exp(-(M1[t,e]+F1[t,e]))) * N1[t,e] # capture de la classe d'âge 1
      C2[t,e] <- (F2[t,e]/(M2[t,e]+F2[t,e])) * (1-exp(-(M2[t,e]+F2[t,e]))) * N2[t,e] # capture de la classe d'âge 2
      C3[t,e] <- (F3[t,e]/(M3[t,e]+F3[t,e])) * (1-exp(-(M3[t,e]+F3[t,e]))) * N3[t,e] # capture de la classe d'âge 3

# Total mortality (natural and fishing)
########################################## 

      Z1[t,e] <- M1[t,e] + F1[t,e] 
      Z2[t,e] <- M2[t,e] + F2[t,e]
      Z3[t,e] <- M3[t,e] + F3[t,e]

# Abundance estimations
########################
	
      N1[t+1,e] <- N.SSN[t,e]*(Z.SSN[t,e])
      N2[t+1,e] <-  N1[t,e]*exp(-Z1[t,e]) 
      N3[t+1,e] <-  N2[t,e]*exp(-Z2[t,e]) 
      N4[t+1,e] <-  N3[t,e]*exp(-Z3[t,e]) # Deterministic equation for age 4. In the model, the individuals in age group 4 come only from age group 3. 


# Body size estimations 
########################

      L1[t,e] ~ dlnorm(log(L1.prior.annuel[e]),1/(sigma.L*sigma.L)) 
      L2[t+1,e] <-  L1[t,e]*g1[t,e] 
      L3[t+1,e] <-  L2[t,e]*g2[t,e] 
      L4[t+1,e] <-  L3[t,e]*g3[t,e]

  } # end loop on process equations


  for (t in 1:n_annee){ # loop for calculating the abundance index


      I1[t,e] <- N1[t,e] * (1/Q[e]) # Abundance index age class 1
      I2[t,e] <- N2[t,e] * (1/Q[e]) 
      I3[t,e] <- N3[t,e] * (1/Q[e]) 
      I4[t,e] <- N4[t,e] * (1/Q[e]) 

  } # end loop on the abundance index

} # end loop on e



for (e in 2)
{
  for(t in 1:(n_annee-1)){
# Absolute catches (Baranov equation) 
#######################################

      C4[t,e] <- (F4[t,e]/(M4[t,e]+F4[t,e])) * (1-exp(-(M4[t,e]+F4[t,e]))) * N4[t,e] 
      C5[t,e] <- (F5[t,e]/(M5[t,e]+F5[t,e])) * (1-exp(-(M5[t,e]+F5[t,e]))) * N5[t,e] 
      C6[t,e] <- (F6[t,e]/(M6[t,e]+F6[t,e])) * (1-exp(-(M6[t,e]+F6[t,e]))) * N6[t,e] 

# Total mortality (natural and fishing)
########################################## 

      Z4[t,e] <- M4[t,e] + F4[t,e] 
      Z5[t,e] <- M5[t,e] + F5[t,e]
      Z6[t,e] <- M6[t,e] + F6[t,e]

# Abundance estimations
########################
	
      N5[t+1,e] <-  N4[t,e]*exp(-Z4[t,e]) 
      N6[t+1,e] <-  N5[t,e]*exp(-Z5[t,e]) 
      N7[t+1,e] <-  N6[t,e]*exp(-Z6[t,e]) 

# Body size estimations 
########################

      L5[t+1,e] <-  L4[t,e]*g4[t,e] 
      L6[t+1,e] <-  L5[t,e]*g5[t,e] 
      L7[t+1,e] <-  L6[t,e]*g6[t,e] 

} # end loop on process equations

for (t in 1:n_annee){ # loop for calculating the abundance index

      I5[t,e] <- N5[t,e] * (1/Q[e]) 
      I6[t,e] <- N6[t,e] * (1/Q[e]) 
      I7[t,e] <- N7[t,e] * (1/Q[e]) 

  } # end loop for catches (anchovy)

} # end loop on e




#############################
### Observation equations ###
#############################

  sigma.c.obs <- 0.05 # Uncertainty of catch data, corresponding to a CV of 5%

for (e in 1:2)
{
  for (t in 1:(n_annee-1)){ # loop to adjust estimated catch data to observed catch data

      	c1.obs[t,e] ~ dlnorm(log(C1[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))
      	c2.obs[t,e] ~ dlnorm(log(C2[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))
      	c3.obs[t,e] ~ dlnorm(log(C3[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))

	c1.pp[t,e] ~ dlnorm (log(C1[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))	# log predictive , n1.pp = esperance
	c2.pp[t,e] ~ dlnorm (log(C2[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))	
	c3.pp[t,e] ~ dlnorm (log(C3[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))	
  } # end loop for catches 
} # end loop on e

for (e in 2)
{
  for (t in 1:(n_annee-1)){ # loop to adjust estimated catch data to observed catch data

      	c4.obs[t,e] ~ dlnorm(log(C4[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))
      	c5.obs[t,e] ~ dlnorm(log(C5[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))
        c6.obs[t,e] ~ dlnorm(log(C6[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))

	c4.pp[t,e] ~ dlnorm (log(C4[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))	# log predictive , n1.pp = esperance
	c5.pp[t,e] ~ dlnorm (log(C5[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))	
  	c6.pp[t,e] ~ dlnorm (log(C6[t,e])-(0.5*sigma.c.obs*sigma.c.obs),1/(sigma.c.obs*sigma.c.obs))
	
  } # end loop for catches
} # end loop on e




for (e in 1:2)
{
  for (t in 1:n_annee){ # loop to adjust estimated abundance and body size data to observed data

# Abundances

	log_I1[t,e]<-log(I1[t,e])			
	log_I2[t,e]<-log(I2[t,e])
	log_I3[t,e]<-log(I3[t,e])
	log_I4[t,e]<-log(I4[t,e])

	n1.obs[t,e] ~ dlnorm((log(I1[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	n2.obs[t,e] ~ dlnorm((log(I2[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	n3.obs[t,e] ~ dlnorm((log(I3[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	n4.obs[t,e] ~ dlnorm((log(I4[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	
	n1.pp[t,e] ~ dlnorm((log(I1[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))  # log predictive , n1.pp = esperance
	n2.pp[t,e] ~ dlnorm((log(I2[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	n3.pp[t,e] ~ dlnorm((log(I3[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	n4.pp[t,e] ~ dlnorm((log(I4[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	
	# sigma.n.obs is provided by observation data 

# Body sizes

	l1.obs[t,e] ~ dlnorm((log(L1[t,e])-(0.5*sigma.l1.obs[t,e]*sigma.l1.obs[t,e])),1/(sigma.l1.obs[t,e]*sigma.l1.obs[t,e]))
	l2.obs[t,e] ~ dlnorm((log(L2[t,e])-(0.5*sigma.l2.obs[t,e]*sigma.l2.obs[t,e])),1/(sigma.l2.obs[t,e]*sigma.l2.obs[t,e]))
	l3.obs[t,e] ~ dlnorm((log(L3[t,e])-(0.5*sigma.l3.obs[t,e]*sigma.l3.obs[t,e])),1/(sigma.l3.obs[t,e]*sigma.l3.obs[t,e]))
	l4.obs[t,e] ~ dlnorm((log(L4[t,e])-(0.5*sigma.l4.obs[t,e]*sigma.l4.obs[t,e])),1/(sigma.l4.obs[t,e]*sigma.l4.obs[t,e]))
	
	l1.pp[t,e] ~ dlnorm((log(L1[t,e])-(0.5*sigma.l1.obs[t,e]*sigma.l1.obs[t,e])),1/(sigma.l1.obs[t,e]*sigma.l1.obs[t,e]))  # log predictive , l1.pp = esperance
	l2.pp[t,e] ~ dlnorm((log(L2[t,e])-(0.5*sigma.l2.obs[t,e]*sigma.l2.obs[t,e])),1/(sigma.l2.obs[t,e]*sigma.l2.obs[t,e]))
	l3.pp[t,e] ~ dlnorm((log(L3[t,e])-(0.5*sigma.l3.obs[t,e]*sigma.l3.obs[t,e])),1/(sigma.l3.obs[t,e]*sigma.l3.obs[t,e]))
	l4.pp[t,e] ~ dlnorm((log(L4[t,e])-(0.5*sigma.l4.obs[t,e]*sigma.l4.obs[t,e])),1/(sigma.l4.obs[t,e]*sigma.l4.obs[t,e]))


  } # end loop of abundances and body sizes for anchovy and sardine
} # end loop on e

for (e in 2)
{
  for (t in 1:n_annee){ # loop to adjust estimated abundance and body size data to observed data

# Abundances

	log_I5[t,e]<-log(I5[t,e])			
	log_I6[t,e]<-log(I6[t,e])
  	log_I7[t,e]<-log(I7[t,e])

	n5.obs[t,e] ~ dlnorm((log(I5[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	n6.obs[t,e] ~ dlnorm((log(I6[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
  	n7.obs[t,e] ~ dlnorm((log(I7[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	
	n5.pp[t,e] ~ dlnorm((log(I5[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))  # log predictive , n1.pp = esperance
	n6.pp[t,e] ~ dlnorm((log(I6[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	n7.pp[t,e] ~ dlnorm((log(I7[t,e])-(0.5*sigma.n.obs[t,e]*sigma.n.obs[t,e])),1/(sigma.n.obs[t,e]*sigma.n.obs[t,e]))
	# sigma.n.obs is provided by observation data

# Body size

	l5.obs[t,e] ~ dlnorm((log(L5[t,e])-(0.5*sigma.l5.obs[t,e]*sigma.l5.obs[t,e])),1/(sigma.l5.obs[t,e]*sigma.l5.obs[t,e]))
	l6.obs[t,e] ~ dlnorm((log(L6[t,e])-(0.5*sigma.l6.obs[t,e]*sigma.l6.obs[t,e])),1/(sigma.l6.obs[t,e]*sigma.l6.obs[t,e]))
  	l7.obs[t,e] ~ dlnorm((log(L7[t,e])-(0.5*sigma.l7.obs[t,e]*sigma.l7.obs[t,e])),1/(sigma.l7.obs[t,e]*sigma.l7.obs[t,e]))
	
	l5.pp[t,e] ~ dlnorm((log(L5[t,e])-(0.5*sigma.l5.obs[t,e]*sigma.l5.obs[t,e])),1/(sigma.l5.obs[t,e]*sigma.l5.obs[t,e]))  # log predictive , l1.pp = esperance
	l6.pp[t,e] ~ dlnorm((log(L6[t,e])-(0.5*sigma.l6.obs[t,e]*sigma.l6.obs[t,e])),1/(sigma.l6.obs[t,e]*sigma.l6.obs[t,e]))
  	l7.pp[t,e] ~ dlnorm((log(L7[t,e])-(0.5*sigma.l7.obs[t,e]*sigma.l7.obs[t,e])),1/(sigma.l7.obs[t,e]*sigma.l7.obs[t,e]))

  } # end loop of abundances and body sizes for sardine
} # end loop on e


}" # end of the model

write(model_simple,file("Jointdemolatent.txt"))